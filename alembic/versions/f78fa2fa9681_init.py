"""init

Revision ID: f78fa2fa9681
Revises: 9aca449a376b
Create Date: 2025-02-11 11:35:04.298209

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "f78fa2fa9681"
down_revision: Union[str, None] = "9aca449a376b"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "accounts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "bank_code",
            sa.Enum(
                "알수없음",
                "한국은행",
                "산업은행",
                "기업은행",
                "국민은행",
                name="bankcode",
            ),
            nullable=False,
        ),
        sa.Column("account_number", sa.String(), nullable=False),
        sa.Column(
            "account_type",
            sa.Enum(
                "CHECKING",
                "SAVING",
                "LOAN",
                "PENSION",
                "TRUST",
                "FOREIGN_CURRENCY",
                "IRP",
                "STOCK",
                name="accounttype",
            ),
            nullable=False,
        ),
        sa.Column("balance", sa.Numeric(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("account_number"),
    )
    op.create_index(op.f("ix_accounts_id"), "accounts", ["id"], unique=False)
    op.create_table(
        "analysis",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column(
            "analysis_type",
            sa.Enum("DAILY", "WEEKLY", "MONTHLY", "YEARLY", name="analysistype"),
            nullable=False,
        ),
        sa.Column(
            "analysis_about",
            sa.Enum("TOTAL_SPENDING", "TOTAL_INCOME", name="analysisabout"),
            nullable=False,
        ),
        sa.Column("amount", sa.Numeric(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_analysis_id"), "analysis", ["id"], unique=False)
    op.create_table(
        "transactions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("account_id", sa.Integer(), nullable=False),
        sa.Column(
            "transaction_type",
            sa.Enum("DEPOSIT", "WITHDRAW", name="transactiontype"),
            nullable=False,
        ),
        sa.Column(
            "transaction_method",
            sa.Enum(
                "ATM",
                "TRANSFER",
                "AUTOMATIC_TRANSFER",
                "CARD",
                "INTEREST",
                name="transactionmethod",
            ),
            nullable=False,
        ),
        sa.Column("amount", sa.Numeric(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accounts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_transactions_id"), "transactions", ["id"], unique=False)
    op.drop_index("ix_test_model_id", table_name="test_model")
    op.drop_index("ix_test_model_name", table_name="test_model")
    op.drop_table("test_model")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "test_model",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("name", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="test_model_pkey"),
    )
    op.create_index("ix_test_model_name", "test_model", ["name"], unique=False)
    op.create_index("ix_test_model_id", "test_model", ["id"], unique=False)
    op.drop_index(op.f("ix_transactions_id"), table_name="transactions")
    op.drop_table("transactions")
    op.drop_index(op.f("ix_analysis_id"), table_name="analysis")
    op.drop_table("analysis")
    op.drop_index(op.f("ix_accounts_id"), table_name="accounts")
    op.drop_table("accounts")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
